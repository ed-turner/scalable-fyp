version: '3.7'

services:
  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=S3cret
      - POSTGRES_USER=citizix_user
      - POSTGRES_DB=mlflowdb
  minio:
    image: minio/minio
    expose:
      - "9000"
    ports:
      - "9000:9000"
      # MinIO Console is available at http://localhost:9001
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "minio_user"
      MINIO_ROOT_PASSWORD: "minio_password"
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 1s
      timeout: 10s
      retries: 5
    command: server /data --console-address ":9001"
    # Create a bucket named "bucket" if it doesn't exist
  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      bash -c "
      mc alias set minio http://minio:9000 minio_user minio_password &&
      if ! mc ls minio | grep --quiet bucket; then
        mc mb minio/bucket
      else
        echo 'bucket already exists'
      fi
      "
  mlflow:
    expose:
      - "5000"
    ports:
      - 5000:5000
    build:
      dockerfile: docker/mlflow/Dockerfile
      context: .
    environment:
      - MLFLOW_TRACKING_USERNAME=admin
      - MLFLOW_TRACKING_PASSWORD=admin
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minio_user
      - AWS_SECRET_ACCESS_KEY=minio_password
    command:
      - mlflow server \
        --backend-store-uri postgresql://citizix_user:S3cret@postgres:5432/mlflowdb?options=-csearch_path%3Ddbo,mlflow_schema \
        --artifacts-destination s3://bucket \
        --host 0.0.0.0 \
        --port 5000

volumes:
  db-data: